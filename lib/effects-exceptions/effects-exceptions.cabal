cabal-version:      2.4
name:               effects-exceptions
version:            0.1
license:            MIT
license-file:       LICENSE
tested-with:
  GHC ==9.2.8 || ==9.4.8 || ==9.6.5 || ==9.8.3 || ==9.10.1

copyright:          2022-2024 Thomas Bidne
author:             Thomas Bidne
maintainer:         tbidne@protonmail.com
homepage:           https://github.com/tbidne/monad-effects/
bug-reports:        https://github.com/tbidne/monad-effects/issues
synopsis:           Exception effects
description:        Exception effects
category:           Effects
extra-source-files: CHANGELOG.md

source-repository head
  type:     git
  location: https://github.com/tbidne/monad-effects

common common-lang
  default-extensions:
    ConstraintKinds
    DataKinds
    DeriveAnyClass
    DeriveFunctor
    DeriveGeneric
    DerivingStrategies
    DerivingVia
    FlexibleInstances
    GADTs
    GeneralizedNewtypeDeriving
    ImportQualifiedPost
    LambdaCase
    MultiParamTypeClasses
    NumericUnderscores
    OverloadedLabels
    OverloadedStrings
    RankNTypes
    ScopedTypeVariables
    StandaloneDeriving
    TupleSections
    TypeApplications
    TypeFamilies
    TypeOperators

  -- NOTE: [TypeAbstractions default extensions]
  --
  -- We would like to enable TypeAbstractions globally i.e. the below logic,
  -- however, that runs afoul of our format job because cabal/cabal-fmt does
  -- not recognize the extension yet. We need a greater version of cabal,
  -- presumably.
  --
  -- Until our ci (nix) has a cabal that recognizes TypeAbstractions,
  -- enable it in the module.
  --
  --if impl(ghc >=9.8.1)
  --  default-extensions: TypeAbstractions

  if os(windows)
    cpp-options: -DWINDOWS

  if impl(ghc <9.4)
    cpp-options: -DGHC_LT_9_4

library
  import:           common-lang
  exposed-modules:
    Effects.Exception
    Effects.Exception.Annotation.CallStack.Legacy
    Effects.Exception.Annotation.Common
    Effects.Exception.Annotation.Utils

  build-depends:
    , base             >=4.16.0.0 && <4.21
    , containers       >=0.6.3.1  && <0.8
    , deepseq          >=1.4.4.0  && <1.6
    , exceptions       ^>=0.10.4
    , safe-exceptions  ^>=0.1.7.0
    , transformers     >=0.5.6.2  && <0.7

  hs-source-dirs:   src
  default-language: Haskell2010

test-suite unit
  import:           common-lang
  type:             exitcode-stdio-1.0
  main-is:          Main.hs
  other-modules:
    Annotation.CallStack.Legacy
    Annotation.Utils

  build-depends:
    , base
    , effects-exceptions
    , tasty               >=1.1.0.3 && <1.6
    , tasty-hunit         >=0.9     && <0.11
    , transformers

  if (os(windows) || impl(ghc >=9.10.1))
    build-depends: text >=1.2.4.0 && <2.2

  hs-source-dirs:   test/unit
  ghc-options:      -threaded -with-rtsopts=-N
  default-language: Haskell2010
